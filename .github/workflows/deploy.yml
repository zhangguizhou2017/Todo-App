name: 自动部署到服务器

# 触发条件：当推送到 main 分支时
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. 检出代码
    - name: 检出代码
      uses: actions/checkout@v4
    
    # 2. 跳过 Node.js 环境设置 (服务器端已有 Node.js)
    # - name: 设置 Node.js 环境
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '18'
    #     cache: 'npm'
    
    # 3. 跳过本地依赖安装 (在服务器端安装)
    # - name: 安装依赖
    #   run: npm ci
    
    # 4. 验证部署配置
    - name: 验证部署配置
      run: |
        echo "🚀 准备部署到服务器..."
        echo "仓库: ${{ github.repository }}"
        echo "分支: ${{ github.ref_name }}"
        echo "提交: ${{ github.sha }}"
        if [ -n "$SERVER_HOST" ] && [ -n "$SERVER_SSH_KEY" ]; then
          echo "✅ 部署配置验证通过"
        else
          echo "❌ 部署配置缺失，请检查 Repository Secrets"
          exit 1
        fi
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
    
    # 5. 部署到服务器
    - name: 部署到服务器
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        debug: true
        timeout: 30s
        command_timeout: 10m
        script: |
          # 进入项目目录
          cd /www/wwwroot/todo-app
          
          # 拉取最新代码
          git pull origin main
          
          # 安装/更新依赖
          npm ci --production
          
          # 安装 MCP 服务器依赖
          cd todo-mcp-server
          npm ci --production
          cd ..
          
          # 重启 PM2 进程
          pm2 restart todo-app || pm2 start server.js --name todo-app
          
          # 显示状态
          pm2 status
          pm2 logs todo-app --lines 10